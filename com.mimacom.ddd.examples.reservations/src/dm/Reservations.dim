domain dm.Restaurant

information model Reservations {

	primitive Size redefines Natural

	primitive Message redefines Text

	component Tables {

		query has_Free_Table(minSeats : Size) : Boolean 
		returns Table.all.exists(t | t.seats â‰¥ minSeats AND t.state = Table.FREE)

		query estimated_Wait_Time(seats : Size) : Duration   

		main autonomous entity Table {
			states { FREE, USED }
			events { ALLOCATED, CLEANED} 
			seats : Size
			party references Party?
		}
	}

	component Parties {

		query all_Waiting_Parties() : Party* 
		returns Party.all.select(p|p.state = Party.WAITING)

		query is_Party_Waiting(available_Seats : Size) : Boolean 
		returns Party.all.exists(p | p.state = Party.WAITING AND p.size â‰¤ available_Seats)

		main entity Party {
			states { ARRIVED, WAITING, SEATED, LEFT }
			events { WAIT, SIT, LEAVE }
			name : Name
			size : Size
			arrival_Time : Timepoint
			max_Wait_Time : Duration
			time_waited() : Duration returns  now() - arrival_Time
			waited_more_than(d : Duration) : Boolean returns time_waited > d
			tab contains Tab?
		}
	}
}

